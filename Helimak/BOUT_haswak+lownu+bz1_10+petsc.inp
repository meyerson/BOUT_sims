# settings file for BOUT++
#
# Drift wave instability in a cylinder
#
# By default everything in NetCDF.
# To change to PDB format, change the settings to
#   grid="uedge.grd_std.pdb"
#   dump_format = "pdb"

##################################################
# settings used by the core code

NOUT = 100       # number of time-steps
#TIMESTEP = 5e-3   # time between outputs
#TIMESTEP = .00010
TIMESTEP = 5e2

archive = 100
restart = false
boost = false


ShiftXderivs = false # use shifted radial derivatives?
TwistShift = false  # use twist-shift condition?

#periodicX = true # broken

MZ = 129    # number of points in z direction (2^n + 1)
ZMIN = 0.0
#ZMAX = 1e-4.91125e-4
ZMAX = 1

#MXG = 1
MXG= 2	
MYG = 2

NXPE = 1
NYPE = 4

#StaggerGrids = True

#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_Bz_COLD+DENSE+NARROW_1x32_0.14_lam_n.nc"

#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_Bz_COLD+DENSE+NARROWER_1x32_0.14_lam_n.nc"

#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_Bz_COLD+DENSE+.9to1.1_1x32_0.14_lam_n.nc"

#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_Bz_1x32_0.14_lam_n.nc"

#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_Bz11_1x32_0.14_lam_n.nc"


grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_bz_1_10_1x64_0.14_lam_n.nc"

#for small large dz values try
#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_bz_1_10_wider_1x64_0.14_lam_n.nc"

#grid = "/home/cryosphere/BOUT/tools/cyl_and_helimak_grids/Helimak_bz_1_1_1x64_0.14_lam_n.nc"


dump_format = "nc" # Output format. nc = NetCDF

StaggerGrids = true

##################################################
# derivative methods #simpler methods seem more stable

[ddx]

first = C2
second = C2
upwind = U1

[ddy]
#StaggerGrids = true
first = C4
second = C4
upwind = U1

[ddz]

first = C2
second = C2
upwind = C2
##################################################
# Solver settings

[solver]
#type = ida
#type = ida
#type = euler #trash
#type = pvode #sometimes this one is faster
#type = rk4
#type = karniadakis
type = petsc

# mudq, mldq, mukeep, mlkeep preconditioner options
#ATOL = 1.0e-12# absolute tolerance
#RTOL = 1.0e-7  # relative tolerance
ATOL = 1.0e-11 # absolute tolerance
RTOL = 1.0e-5 # relative tolerance
#use_precon = true
diagnose = true
rightprec = false
use_jacobian = true	  
mxstep = 5000
start_timestep = 10


[dae]

constraint = true
##################################################
# Laplacian inversion options
[laplace]
all_terms = false
filter = 0.2 #fraction of modes to filter, between 1 and 0
#use_ppd = true
#max_mode = 16
##################################################
# settings for hlmk

[hlmk]

#AA = 2.0 #hydrogen plasma
AA = 36.0  #singly ionized argon 36 ( the nonradioactive isotope)
#AA = 1.0
ZZ = 1.0 #charge state
Zeff = 1 
 
estatic = true  # if true, electrostatic (Apar = 0)
ZeroElMass = true  # Use Ohms law without electron inertia
nonlinear = false
haswak = true
par_damp = true
noDC = true
plusDC = false
zlowpass = .1
phi_constraint = true

#Zeff = 128.0        # Z effective
nu_perp = 1.0e-20

ShearFactor = 0.0



# field inversion flags: Add the following
#  1 - Zero-gradient DC component on inner boundary
#  2 - Zero-gradient AC component on inner boundary
#  4 -      "        DC     "      " outer    "
#  8 -      "        AC     "      " outer    "
# 16 - Zero all DC components of the result
# 32 - Don't use previous solution to start iterations
#      (iterative methods only)


#INVER_BNDRY_ONE   = 64; // Sets the width of the boundary to 1
# const int INVERT_4TH_ORDER   = 128; // Use band solver for 4th order in x

# const int INVERT_AC_IN_LAP   = 256;
# const int INVERT_AC_OUT_LAP  = 512;

# const int INVERT_IN_SYM  =  1024; // Use symmetry to enforce either zero-value or zero-gradient
# const int INVERT_OUT_SYM =  2048; // Same for outer boundary
# const int INVERT_IN_SET  =  4096; // Set inner boundary
# const int INVERT_OUT_SET =  8192; // Set outer boundary
# const int INVERT_IN_RHS  = 16384; // Use input value in RHS at inner boundary
# const int INVERT_OUT_RHS = 32768; // Use input value in RHS at outer boundary
# const int INVERT_KX_ZERO = 65536; // Zero the kx=0, n = 0 component

#1024+2048+8+2 = 3074
#phi_flags = 3074  # inversion flags for phi, very important for lin ver
#phi_flags = 10  # inversion flags for phi, very important for lin ver
#phi_flags = 65546
#phi_flags = 0
apar_flags = 10 # flags for apar inversion

##################################################
# settings for individual variables
# The section "All" defines default settings for all variables
# These can be overridden for individual variables in
# a section of that name.

[All]
scale = 1e1 # default size of initial perturbations

# form of initial profile:
# 0 - constant
# 1 - Gaussian
# 2 - Sinusoidal
# 3 - Mix of mode numbers (like original BOUT)

xs_opt = 0
ys_opt = 2
zs_opt = 3

zs_wd = .05
ys_wd = .05
ys_mode = 1#

zs_mode = 1 # toroidal mode number


# boundary conditions (see boundary.h for values)
# 0 = none applied
# 1 = zero value
# 2 = zero gradient
# 3 = laplacian
# 4 = laplacian with zero-gradient

bndry_xin = neumann
bndry_xout = neumann

#bndry_xin = relax(neumann)
#bndry_xout = relax(neumann)
bndry_yup = dirichlet	
bndry_ydown = dirichlet
#bndry_core = 
	
[Ni]
#scale = 1.0e-5 # 
#scale = -1.0e-8
zs_phase = .25
#function = gauss((z-3.14)/.3)*sin((z-3.14)/.3)*gauss(y-3)
[rho] 
#scale = 1.0e-5
#ys_opt = 2
#zs_opt = 2  
[Vi]
evolve = false
#scale = 1.0e-6 #


#these are not evolved in this case
[Ajpar]
evolve = false
[jpar]
#bndry_all = neumann # Zero-gradient on all boundaries
#[Apar]

[Te]
evolve = false
scale = -1.0e-10 #
[Ti]
evolve = false
scale = 1.0e-8 #

[phi]
bndry_xin = dirichlet
bndry_xout = dirichlet